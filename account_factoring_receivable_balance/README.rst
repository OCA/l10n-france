====================================
Account Factoring Receivable Balance
====================================

.. 
   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
   !! This file is generated by oca-gen-addon-readme !!
   !! changes will be overwritten.                   !!
   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
   !! source digest: sha256:f83b4e457e88c47bbaaf7466d0fe78b4b388825dbfcc675626c326ae91716e89
   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

.. |badge1| image:: https://img.shields.io/badge/maturity-Beta-yellow.png
    :target: https://odoo-community.org/page/development-status
    :alt: Beta
.. |badge2| image:: https://img.shields.io/badge/licence-AGPL--3-blue.png
    :target: http://www.gnu.org/licenses/agpl-3.0-standalone.html
    :alt: License: AGPL-3
.. |badge3| image:: https://img.shields.io/badge/github-Akretion%2Fhttps://github.com/akretion/odoo--factoring/tree/16.0-lightgray.png?logo=github
    :target: https://github.com/Akretion/https://github.com/akretion/odoo-factoring/tree/16.0/tree/17.0/account_factoring_receivable_balance
    :alt: Akretion/https://github.com/akretion/odoo-factoring/tree/16.0

|badge1| |badge2| |badge3|

see account_factoring_receivable_balance_bpce module

**Table of contents**

.. contents::
   :local:

Configuration
=============

To implement your own factor connector, see
account_factoring_receivable_balance_bpce module.

At the minimum, you have to define this Subrogation code

.. code:: python

   class SubrogationReceipt(models.Model):
       _inherit = "subrogation.receipt"

       def _prepare_factor_file_myownfactor(self):
           self.ensure_one
           name = "myown_file.txt"
           return {
               "name": name,
               "res_id": self.id,
               "res_model": self._name,
               "datas": self._prepare_factor_file_data_myownfactor(),
           }

       def _prepare_factor_file_data_myownfactor(self):
           ...
           return base64.b64encode(data)

       def _get_partner_field(self):
           res = super()._get_partner_field()
           if self.factor_type == "myownfactor":
               return "myownfactor_factoring_balance"
           return res

this journal code

.. code:: python

   class AccountJournal(models.Model):
       _inherit = "account.journal"

       factor_type = fields.Selection(
           selection_add=[("myownfactor", "MyOwnFactor")], ondelete={"myownfactor": "set null"}
       )

this partner code

.. code:: python

   class ResPartner(models.Model):
       _inherit = "res.partner"

   myownfactor_factoring_balance = fields.Boolean(
       string="Use MyOwnFactor factoring balance",
       groups="account.group_account_invoice",
       company_dependent=True,
       help="Use MyOwnFactor factoring receivable balance external service",
   )

Usage
=====

see account_factoring_receivable_balance_bpce module

Bug Tracker
===========

Bugs are tracked on `GitHub Issues <https://github.com/Akretion/https://github.com/akretion/odoo-factoring/tree/16.0/issues>`_.
In case of trouble, please check there if your issue has already been reported.
If you spotted it first, help us to smash it by providing a detailed and welcomed
`feedback <https://github.com/Akretion/https://github.com/akretion/odoo-factoring/tree/16.0/issues/new?body=module:%20account_factoring_receivable_balance%0Aversion:%2017.0%0A%0A**Steps%20to%20reproduce**%0A-%20...%0A%0A**Current%20behavior**%0A%0A**Expected%20behavior**>`_.

Do not contact contributors directly about support or help with technical issues.

Credits
=======

Authors
-------

* Akretion

Contributors
------------

-  Akretion:

   -  David BEAL
   -  Alexis DE LATTRE

Maintainers
-----------

.. |maintainer-bealdav| image:: https://github.com/bealdav.png?size=40px
    :target: https://github.com/bealdav
    :alt: bealdav
.. |maintainer-alexis-via| image:: https://github.com/alexis-via.png?size=40px
    :target: https://github.com/alexis-via
    :alt: alexis-via

Current maintainers:

|maintainer-bealdav| |maintainer-alexis-via| 

This module is part of the `Akretion/https://github.com/akretion/odoo-factoring/tree/16.0 <https://github.com/Akretion/https://github.com/akretion/odoo-factoring/tree/16.0/tree/17.0/account_factoring_receivable_balance>`_ project on GitHub.

You are welcome to contribute.
