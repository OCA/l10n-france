====================================
Account Factoring Receivable Balance
====================================

.. !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
   !! This file is generated by oca-gen-addon-readme !!
   !! changes will be overwritten.                   !!
   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

.. |badge1| image:: https://img.shields.io/badge/maturity-Beta-yellow.png
    :target: https://odoo-community.org/page/development-status
    :alt: Beta
.. |badge2| image:: https://img.shields.io/badge/licence-AGPL--3-blue.png
    :target: http://www.gnu.org/licenses/agpl-3.0-standalone.html
    :alt: License: AGPL-3
.. |badge3| image:: https://img.shields.io/badge/github-OCA%2Fodoo--factoring-lightgray.png?logo=github
    :target: https://github.com/OCA/odoo-factoring/tree/15.0/account_factoring_receivable_balance
    :alt: OCA/odoo-factoring
.. |badge4| image:: https://img.shields.io/badge/weblate-Translate%20me-F47D42.png
    :target: https://translation.odoo-community.org/projects/odoo-factoring-15-0/odoo-factoring-15-0-account_factoring_receivable_balance
    :alt: Translate me on Weblate

|badge1| |badge2| |badge3| |badge4| 

see account_factoring_receivable_balance_bpce module

**Table of contents**

.. contents::
   :local:

Configuration
=============

To implement your own factor connector, see account_factoring_receivable_balance_bpce module.


At the minimum, you have to define


.. code-block:: python

    class SubrogationReceipt(models.Model):
        _inherit = "subrogation.receipt"

        def _prepare_factor_file_myownfactor(self):
            self.ensure_one
            name = "myown_file.txt"
            return {
                "name": name,
                "res_id": self.id,
                "res_model": self._name,
                "datas": self._prepare_factor_file_data_myownfactor(),
            }

        def _prepare_factor_file_myownfactor(self):
            ...
            return base64.b64encode(data)


Other settings in journal


.. code-block:: python

    class AccountJournal(models.Model):
        _inherit = "account.journal"

        factor_type = fields.Selection(
            selection_add=[("myownfactor", "MyOwnFactor")], ondelete={"myownfactor": "set null"}
        )


Usage
=====

see account_factoring_receivable_balance_bpce module

Bug Tracker
===========

Bugs are tracked on `GitHub Issues <https://github.com/OCA/odoo-factoring/issues>`_.
In case of trouble, please check there if your issue has already been reported.
If you spotted it first, help us smashing it by providing a detailed and welcomed
`feedback <https://github.com/OCA/odoo-factoring/issues/new?body=module:%20account_factoring_receivable_balance%0Aversion:%2015.0%0A%0A**Steps%20to%20reproduce**%0A-%20...%0A%0A**Current%20behavior**%0A%0A**Expected%20behavior**>`_.

Do not contact contributors directly about support or help with technical issues.

Credits
=======

Authors
~~~~~~~

* 

Contributors
~~~~~~~~~~~~

* Akretion:
    - David BEAL
    - Alexis DE LATTRE


Maintainers
~~~~~~~~~~~

This module is maintained by the OCA.

.. image:: https://odoo-community.org/logo.png
   :alt: Odoo Community Association
   :target: https://odoo-community.org

OCA, or the Odoo Community Association, is a nonprofit organization whose
mission is to support the collaborative development of Odoo features and
promote its widespread use.

.. |maintainer-bealdav| image:: https://github.com/bealdav.png?size=40px
    :target: https://github.com/bealdav
    :alt: bealdav
.. |maintainer-alexis-via| image:: https://github.com/alexis-via.png?size=40px
    :target: https://github.com/alexis-via
    :alt: alexis-via

Current `maintainers <https://odoo-community.org/page/maintainer-role>`__:

|maintainer-bealdav| |maintainer-alexis-via| 

This module is part of the `OCA/odoo-factoring <https://github.com/OCA/odoo-factoring/tree/15.0/account_factoring_receivable_balance>`_ project on GitHub.

You are welcome to contribute. To learn how please visit https://odoo-community.org/page/Contribute.
